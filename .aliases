# Argocd 

alias acd="argocd"
alias acddel="argocd app delete"
alias acdedit="argocd app edit"
alias acdget="argocd app get"
alias acdlist="argocd app list"
alias acdsync="argocd app sync"
alias acdsync-all-apps="argocd app sync -l app.kubernetes.io/instance=apps"
alias appset="argocd appset"



# Calico

alias ccl="calicoctl" 
alias cca="calicoctl apply"
alias ccaf="calicoctl apply -f"
alias ccdel="calicoctl delete"
alias ccdelf="calicoctl delete -f"



# Kubernetes

alias ka="kubectl apply"
alias kaf="kubectl apply -f"
alias kak="kubectl apply -k"
alias kc="kubectl"
alias kd="kubectl describe"
alias kdp="kubectl describe pod"
alias kdel="kubectl delete"
alias kdelf="kubectl delete -f"
alias kdelk="kubectl delete -k"
alias kdelir="kubectl delete ingressroute"
alias kdelcomp="kubectl delete pod --field-selector=status.phase==Succeeded"
alias kdelfailed="kubectl delete pod --field-selector=status.phase==Failed"
alias kdelnp="kubectl delete networkpolicy"
alias kdelsel="kubectl delete pods --selector"
alias ke="kubectl edit"
alias ked="kubectl edit deployment"
alias keir="kubectl edit ingressroute"
alias kep="kubectl edit pod"
alias kes="kubectl edit svc"
alias kg="kubectl get"
alias kgbaddepl="kubectl get deployments -o custom-columns=NAME:.metadata.name,READY:.status.readyReplicas,DESIRED:.spec.replicas,UP-TO-DATE:.status.updatedReplicas,AVAILABLE:.status.availableReplicas | awk 'NR==1 || \$2!=\$3 || \$4!=\$3 || \$5!=\$3'"
alias kgevents="kubectl get events --sort-by='.lastTimestamp'"
alias kgeverything="kubectl api-resources --verbs=list --namespaced -o name | xargs -n 1 kubectl get --show-kind --ignore-not-found -oname"
alias kgnotrunning="kg pods -A | grep -v Running | grep -v Completed"
alias kgnp="kubectl get networkpolicy"
alias kgnpa="kubectl get networkpolicy -A"
alias kgp="kubectl get pods -o wide"
alias kgs="kubectl get svc -o wide"
alias kgi="kubectl get ingress"
alias kgir="kubectl get ingressroute"
alias kgya="kubectl -oyaml get"
alias klog="kubectl logs"
alias krollstart="kubectl rollout restart"
alias ksh="kubectl exec --stdin --tty"
alias kw="kubectl --watch"

alias kcx="kubectx"
alias kns="kubens"

alias watch="watch "
alias wkga="watch kubectl get pods -owide"
alias wkgaa="watch kubectl get pods -A -owide"

alias kt="kubetail"
alias ks="kubeseal"

alias kshell='kubectl run -it --image wbitt/network-multitool --restart Never --rm=false shell -- /bin/bash'
alias kshelldset='echo -e "apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: network-multitool\nspec:\n  selector:\n    matchLabels:\n      name: network-multitool\n  template:\n    metadata:\n      labels:\n        name: network-multitool\n    spec:\n      containers:\n      - name: network-multitool\n        image: wbitt/network-multitool" | kubectl apply -f -
'

alias helmlist='helm template . |kubectl apply -f - --dry-run=client'

alias pfwd-alertmanager-login='kubectl port-forward -n monitoring services/vmalertmanager-victoria-metrics-k8s-stack 9093:9093 & sleep 0.5; open -a Firefox http://localhost:9093'
alias pfwd-vmagent-login='kubectl port-forward -n monitoring services/vmagent-victoria-metrics-k8s-stack 8429:8429 & sleep 0.5; open -a Firefox http://localhost:8429'
alias pfwd-s3='kubectl port-forward -n rook-ceph services/rook-ceph-rgw-mccs-ceph-s3 80:80'

alias argologin='kubens argocd && argocd admin dashboard & sleep 0.5; open -a Firefox http://localhost:8080 &'

# Misc 

alias ed-zshrc="vim ~/.zshrc"
alias re-zshrc="source ~/.zshrc"

alias gh-login='eval $(ssh-agent); ssh-add ~/.ssh/id_rsa-*-github'
alias bb-login='eval $(ssh-agent); ssh-add ~/.ssh/id_rsa-*-bitbucket'
alias infra-login='eval $(ssh-agent); ssh-add ~/.ssh/id_rsa-*-infra'
alias tf-login='AWS_PROFILE=terraform aws sso login'

alias tf="terraform"
alias nc-help="echo 'Listener: nc -l -u -v -p <port>   Sender: nc -v -u <address> <port>'"

alias cat="bat --style="plain""
alias hist="history|grep"
alias vim="nvim"

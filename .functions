# Alias kg
# Always run 'kg pods' with '-o wide'
# Always run 'kg svc' with '-o wide'
# Always run 'kg nodes' with '-o wide' 
kg() {
    if [[ $1 == "pods" ]]; then
        shift
        kubectl get pods -o wide "$@"
    elif [[ $1 == "svc" ]]; then
        shift
        kubectl get svc -o wide "$@"
    elif [[ $1 == "nodes" ]]; then
        shift
        kubectl get nodes -o wide "$@"
    else
        kubectl get "$@"
    fi
}



# Show base64 encoded secrets
kgsec() { kubectl get secret "$1" -ojson | jq -r '.data | to_entries[] | "\(.key):\(.value | @base64d)"'; }



# Check certificate issuer, subject, and relevant dates - does not work on macos
certchk() { 
    if [[ $1 ]]; then
        openssl storeutl -noout -text -certs "$1" | grep 'Issuer:\|Validity\|Not Before\|Not After\|Subject:\|Alternative\|DNS:'
    else
        xargs openssl storeutl -noout -text -certs | grep 'Issuer:\|Validity\|Not Before\|Not After\|Subject:\|Alternative\|DNS:'
    fi
}



# Recursive replace on macos/BSD sed - use with care, prob super dangerous =)
# Only add if on macos
if [ -d /Users ]; then
    recurs-replace() {
        grep -e "$1" -rl . | xargs sed -i '' "s/$1/$2/g"
    }
else
fi



# If on macos, set language
if [ -d /Users ]; then
    export LANGUAGE=en:en_US:en
else
fi



# Function for testing piping
pipetest() { 
    if [[ $1 ]]; then
        echo "This is $1"
    else
        xargs echo "This is from stdin"
    fi
}
